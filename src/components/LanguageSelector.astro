---
import { getRelativeLocaleUrl } from 'astro:i18n';

interface Props {
	currentLang: string;
	currentPath: string;
	variant?: 'desktop' | 'mobile';
	className?: string;
}

const {
	currentLang,
	currentPath,
	variant = 'desktop',
	className = '',
} = Astro.props;

const variantStyles = {
	desktop: {
		container:
			'flex items-center bg-section-50 dark:bg-section rounded-full shadow-sm border border-section-200 dark:border-section-600',
		link: 'px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 no-underline',
	},
	mobile: {
		container:
			'flex items-center bg-section-100/80 dark:bg-section/80 rounded-lg shadow-sm border border-primary/10 dark:border-primary/20 backdrop-blur-sm',
		link: 'px-3 py-1.5 rounded-md text-xs font-semibold transition-all duration-300 no-underline',
	},
};

const containerClasses =
	`${variantStyles[variant].container} ${className}`.trim();
const baseLinkClasses = variantStyles[variant].link;

const getActiveClasses = (isActive: boolean) => {
	if (variant === 'mobile') {
		return isActive
			? 'bg-accent text-light-50 shadow-md scale-105'
			: 'text-font-primary dark:text-font-primary-900 hover:text-accent hover:bg-accent/10 dark:hover:bg-accent/20';
	} else {
		return isActive
			? 'bg-accent text-light-50 shadow-md'
			: 'text-font-primary dark:text-font-primary-900 hover:text-primary dark:hover:bg-light-600';
	}
};
---

<div class={containerClasses}>
	<a
		href={getRelativeLocaleUrl('en', currentPath)}
		class={`${baseLinkClasses} ${getActiveClasses(currentLang === 'en')}`}>
		EN
	</a>
	<a
		href={getRelativeLocaleUrl('es', currentPath)}
		class={`${baseLinkClasses} ${getActiveClasses(currentLang === 'es')}`}>
		ES
	</a>
</div>
